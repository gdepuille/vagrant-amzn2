# This file was autogenerated by the BETA 'packer hcl2_upgrade' command. We
# recommend double checking that everything is correct before going forward. We
# also recommend treating this file as disposable. The HCL2 blocks in this
# file can be moved to other files. For example, the variable blocks could be
# moved to their own 'variables.pkr.hcl' file, etc. Those files need to be
# suffixed with '.pkr.hcl' to be visible to Packer. To use multiple files at
# once they also need to be in the same folder. 'packer inspect folder/'
# will describe to you what is in that folder.

# Avoid mixing go templating calls ( for example ```{{ upper(`string`) }}``` )
# and HCL2 calls (for example '${ var.string_value_example }' ). They won't be
# executed together and the outcome will be unknown.

# All generated input variables will be of 'string' type as this is how Packer JSON
# views them; you can change their type later on. Read the variables type
# constraints documentation
# https://www.packer.io/docs/from-1.5/variables#type-constraints for more info.
variable "compression_level" {
  type    = number
  default = 6
}

variable "cpus" {
  type    = number
  default = 2
}

variable "headless" {
  type    = bool
  default = false
}

variable "memory" {
  type    = number
  default = 4096
}

variable "ssh_timeout" {
  type    = string
  default = "60m"
}

# "timestamp" template function replacement
locals { timestamp = regex_replace(timestamp(), "[- TZ:]", "") }

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/from-1.5/blocks/source
# could not parse template for following block: "template: hcl2_upgrade:10:42: executing \"hcl2_upgrade\" at <.Name>: can't evaluate field Name in type struct { HTTPIP string; HTTPPort string }"

source "virtualbox-ovf" "autogenerated_1" {
  headless             = var.headless
  output_directory     = "target/{{build_type}}"
  shutdown_command     = "sudo systemctl poweroff"
  source_path          = "target/amzn2.ova"
  ssh_private_key_file = "vagrant.key"
  ssh_timeout          = var.ssh_timeout
  ssh_username         = "vagrant"
  vboxmanage           = [
    ["modifyvm", "{{.Name}}", "--cpus", var.cpus],
    ["modifyvm", "{{.Name}}", "--memory", var.memory]
  ]
  vm_name              = "packer-amzn2"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/from-1.5/blocks/build
build {
  sources = ["source.virtualbox-ovf.autogenerated_1"]

  provisioner "shell" {
    execute_command = "sudo chmod +x {{ .Path }}; {{ .Vars }} sudo {{ .Path }}"
    scripts = [
      "scripts/virtualbox.sh",
      "scripts/vagrant.sh",
      "scripts/sshd.sh",
      "scripts/cleanup.sh",
      "scripts/minimize.sh"
    ]
  }

  # could not parse template for following block: "template: hcl2_upgrade:3:38: executing \"hcl2_upgrade\" at <.Provider>: can't evaluate field Provider in type struct { HTTPIP string; HTTPPort string }"
  post-processor "vagrant" {
    compression_level = var.compression_level
    output            = "target/amzn2-{{.Provider}}.box"
  }
}
